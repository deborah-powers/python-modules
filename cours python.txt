============ Divers ============

Object.__dir__()	récupère les fonctions d'un objet
Object.__module__	nom du fichier contenant la classe de l'objet
Object.__class__	nom de la classe de l'objet
Object.__dict__		renvoi les champs et leurs valeurs sous la forme d'un dictionnaire
__file__			nom du script s'executant
if __name__ == 'main': Pass
Else: Xxx
Empêche de lancer certaines actions quand le script est une dépendance
Syntaxerror: Erreur dans l'écriture du code. Mauvaise indentation.
Nameerror: Mot non reconnu par l'interprêteur. Utilisation d'une variable non déclarée.
Les types de donnée: String, int, float.
Variable contre littéral: Un littéral est une donnée (le nombre 3) utilisée tel quel dans e code, sans être stoquée dans une variable.
6**2 = 36
26/5 = 5.2
26%5 = 1

============ Fonctions à arguments variables ============

def funcnbargvariable (*args):
	# args est un tuple
	For arg in args: Print (arg)
Funcnbargvariable ('a', 'b', 'c')
def funcnomargvariable (**kwargs):
	# kwargs est un dictionnaire
	Print (kwargs.get ('myarg'))
	# si myarg n'existe pas, kwargs.get ('myarg') vaut none
Funcnomargvariable (arg1='coucou', myarg=22)
def functout (argpositionnel, *args, argnomme, **kwargs):
Functout ('coucou', 'les', 'amis', argnomme='il fait beau', argnomme2="aujourd'hui", argnomme3="n'est-ce pas ?")

************************************************

*args =[2,8]
Range (*args)
Args est considéré comme un tuple, *args est considéré comme si les deux chiffres étaient indépendants.
A, *b, c = [3, 6, 9, 12, 15]
>> b= [6, 9, 12]
My_tuple = (3, 6, 9)
Merged_tuple = (0, *my_tuple, 12)
>> merged_tuple = (0, 3, 6, 9, 12)
Num_collection = [3, 6, 9]
Funcnbargvariable (*num_collection)
>> comme si j'avais transmit 3 arguments indépendants au lieu d'un.

============ Rajouter une fonction à une classe ============

def newfunction (self):
	Pass
Setattr (myclass, 'myfunction', newfunction)
Item = myclass()
Item.myfunction()

============ Changer la version de python par défaut ============

Quand j'ai deux versions sur mon ordi.
# remove python 2
Sudo apt purge -y python2.7
Sudo apt purge -y python2.7-minimal
# you already have python 3 but
Sudo ln -s /usr/bin/python3 /usr/bin/python
# same for pip
Sudo apt install -y python3-pip
Sudo ln -s /usr/bin/pip3 /usr/bin/pip
# confirm the new version of python: 3
python --version

************ Seconde méthode ************

# try following to see all instances of python
Whereis python
Which python
# then remove all instances using:
Sudo apt autoremove python
# repeat sudo apt autoremove python(for all versions) that should do it, then install anaconda and manage pythons however you like if you need to reinstall it.

============ Ajouter un dossier à sys.path ============

Je veux utiliser les scripts de /home/deborah/python partout.
from sys import path
Print (path)
Repérer le chemin de site-packages,
/home/deborah/.local/lib/python3.8/site-packages
C:/users/deborah.powers/appdata/local/programs/python/python36/lib/site-packages
C:/users/lenovo/appdata/local/programs/python/python311/lib/site-packages
/usr/lib64/python3.9/site-packages ou /usr/lib/python3.9/site-packages
Créer /site-packages/my-paths.pth
/home/deborah/python
C:/users/deborah.powers/desktop/python
Sudo cp /home/ent6904919/bureau/my-path.pth /usr/lib/python3.9/site-packages/

============ Créer un package ============

Monpackage/
	Setup.py
	Monpackage/
		__init__.py
		autre.py
Dans setup.py
#!/usr/bin/python3.6
# -*- coding: Utf-8 -*-
from setuptools import setup, find_packages
Author = 'deborah noisetier'
Name = 'utilitaires'
Description = "mes petits scripts utilitaires"
Version = '0.1'
Setup (
	Name = name, version = version, description = description,
	Author = author,
	Packages = find_packages()
)
__init__.py contient les trucs chargés à l'appel du package. Il est obligatoire.

************ Installer le package ************

Sudo apt-get install python3-setuptools
Sudo chmod -r 774 /usr/local/lib/python3.8/
cd monpackage/
python setup.py

************ Appeler mes objets ************

from monpackage import trucdansinit
from monpackage.autre import trucdansautre

============ Lancer un package comme un script, mais de partout ============

Dans mon package, j'ai
Monpackage/
	Setup.py
	Monpackage/
		__init__.py
		__main__.py
		autre.py
__main__.py contient le l'action, le script à lancer.

************ Lancer le package ************

python -m monpackage args
Les arguments sont récupérés via sys.argv, comme pour les scripts.

============ Lancer une application ============

Pour l'utiliser moi-même
Import os
Os.system ('appli')
Os.system ('appli fichier')
Lancer et fermer une application
Import subprocess
Import time
P= subprocess.popen ([ appli, fichier])
Time.sleep (4)
P.terminate()
Applis:
	Vlc	vlc
	Eog	visionneuse d'image

============ Récupérer les éléments de mes calendriers google ============

https://developers.google.com/calendar/api/quickstart/python
Dans google, créer mon profil de développeuse. Vérifier que le profil est associé au compte contenant le calendrier.
https://developers.google.com/profile/u/116171585149691769782?hl=fr&authuser=2&utm_source=developers.google.com
Activer l'api google calendar
https://console.cloud.google.com/projectselector2/apis/enableflow?apiid=calendar-json.googleapis.com&hl=fr&pli=1&supportedpurview=project
https://developers.google.com/identity/protocols/oauth2/service-account?authuser=2&hl=fr#creatinganaccount
Cf quickstart.py

************ Erreur invalid_grant ************

File "c:/users/lenovo/desktop/python/calendrier.py", line 315, in <module>
Service = setservice()
^^^^^^^^^^^^
File "c:/users/lenovo/desktop/python/calendrier.py", line 70, in setservice
if creds and creds.expired and creds.refresh_token: Creds.refresh (request())
^^^^^^^^^^^^^^^^^^^^^^^^^
File "c:/users/lenovo/appdata/local/programs/python/python311/lib/site-packages/google/oauth2/credentials.py", line 335, in refresh
) = reauth.refresh_grant(
^^^^^^^^^^^^^^^^^^^^^
File "c:/users/lenovo/appdata/local/programs/python/python311/lib/site-packages/google/oauth2eauth.py", line 349, in refresh_grant
_client._handle_error_response(response_data, retryable_error)
File "c:/users/lenovo/appdata/local/programs/python/python311/lib/site-packages/google/oauth2/_client.py", line 69, in _handle_error_response
Raise exceptions.refresherror(
Google.auth.exceptions.refresherror: ('invalid_grant: Bad request', {'error': 'invalid_grant', 'error_description': 'bad request'})
Dans mon code, ligne #if not creds or not creds.valid
Commenter les if - else,
Garder
Flow = installedappflow.from_client_secrets_file ('credentials.json', scopes)
Creds = flow.run_local_server (port=0)
# save the credentials for the next run
With open ('token.json', 'w') as token: Token.write (creds.to_json())
https://groups.google.com/g/adwords-api/c/skrmufn8h5y
https://developers.google.com/google-ads/api/docs/start?hl=fr#generate_oauth2_credentials
https://console.cloud.google.com/projectselector2/apis/credentials?hl=fr&supportedpurview=project
Sélectionner calendrier-deborah. Attention, mon utilisateur doit être deborah.powers89.
https://console.cloud.google.com/apis/credentials?hl=fr&authuser=2&project=calendrier-deborah&supportedpurview=project

************ Erreurs ************

Modulenotfounderror: No module named 'googleapiclient'
Pip install --upgrade google-api-python-client
Modulenotfounderror: No module named 'google_auth_oauthlib'
Pip install google-auth-oauthlib
"message": "api keys are not supported by this api. Expected oauth2 access token or other authentication credentials that assert a principal. See https://cloud.google.com/docs/authentication",
https://www.googleapis.com/calendar/v3/calendars/nb71ojvfs60b1lmm2re27kj8h4%40group.calendar.google.com/events?singleevents=true&orderby=starttime&timemin=2022-1-2022t1%3a31%3a00z&timemax=2022-1-2022t2%3a31%3a00z&alt=json
Error
	Code	403
	Message	"the request is missing a valid api key."
Errors	0
	Message	"the request is missing a valid api key."
	Domain	"global"
	Reason	"forbidden"
	Status	"permission_denied"
File "quickstart.py", line 231, in fromcalendar
	Evtlisttmp = evtlisttmp2.execute()
File "/home/deborah/.local/lib/python3.8/site-packages/googleapiclient/_helpers.py", line 134, in positional_wrapper
	return wrapped(*args, **kwargs)
File "/home/deborah/.local/lib/python3.8/site-packages/googleapiclient/http.py", line 935, in execute
	Raise httperror(resp, content, uri=self.uri)
Googleapiclient.errors.httperror: <httperror 400 when requesting https://www.googleapis.com/calendar/v3/calendars/nb71ojvfs60b1lmm2re27kj8h4%40group.calendar.google.com/events?singleevents=true&orderby=starttime&timemin=2022-1-2022t1%3a31%3a00z&timemax=2022-1-2022t2%3a31%3a00z&alt=json returned "bad request". Details: "[{'domain': 'global', 'reason': 'badrequest', 'message': 'bad request'}]">
Deborah@deborah-thinkpad-t420: ~/python$
https://www.googleapis.com/calendar/v3/calendars/nb71ojvfs60b1lmm2re27kj8h4@group.calendar.google.com/events?singleevents=true&orderby=starttime&timemin=2022-1-2022t1%3a31%3a00z&timemax=2022-1-2022t2%3a31%3a00z&alt=json
https://www.googleapis.com/calendar/v3/calendars/33akjnknr3mp1oletdkm8tdjog@group.calendar.google.com/events?singleevents=true&orderby=starttime&timemin=2022-1-2022t1%3a31%3a00z&timemax=2022-1-2022t3%3a11%3a00z&alt=json
Modulenotfounderror: No module named 'googleapiclient'
Pip install google-api-python-client
Pip install google-auth-oauthlib